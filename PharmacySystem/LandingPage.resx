<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BU466f8BLrAbvn76XyQAAAAASUVORK5CYII=
</value>
  </data>
</root>